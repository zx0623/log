http的基本优化
影响http网络的二个因素：
1.带宽
  
2.延迟
=> 浏览器阻塞(浏览器对于同域名只能连接4个)
=> DNS 查询 
   浏览器需要知道目标服务器的 IP 才能建立连接。
   将域名解析为 IP 的这个系统就是 DNS。
   这个通常可以利用DNS缓存结果来达到减少这个时间的目的。
=> 建立连接
   http基于TCP协议的
https 与 http的一些区别
1.https 需要CA证书
2.http 运行在tcp 上的，所有传输的内容都是明文， https 是运行在ssl/tls 之上的，所有内容都要加密   
3.http端口是80 https 是443

SPDY:HTTP1.x 的优化
1.降低延迟 SPDY 采用了多路复用，
=> 多路复用 
   从源主机的不同套接字中收集数据块，并为每个数据块封装上首部信息从而生成报文段，然后将报文段传递到网络层中去。
   多个请求stream 共享一个tcp 连接方式，解决延迟   
2.请求优先级 
    多路复用带来一个新的问题是，在连接共享的基础之上有可能会导致关键请求被阻塞。
    SPDY允许给每个request设置优先级，这样重要的请求就会优先得到响应.
3.header压缩。
   选择合适的压缩算法可以减少包的个数，和大小数量
4.基于HTTPs的加密协议传输，大大提高了传输数据的可能性
5.服务器端推送(server push)，SPDY的网页。
=> 例如我的网页有一个sytle.css的请求，在客户端收到sytle.css数据的同时，
   服务端会将sytle.js的文件推送给客户端，当客户端再次尝试获取sytle.js时就可以直接从缓存中获取到，不用再发请求了。
   HTTP => SPDY => SSL => TCP 

http2.0 其实是SPDY的升级版本
1.HTTP2.0 支持明文传输，而SPDY 强制使用HTTPS
2.HTTP2.0 和 SPDY 的头部压缩算法不一样

HTTP2.0 的新特性
1.新的二进制格式， http1.x 是基于文本，http2.0 是基于二进制
2.多路复用
3.header 压缩
4.服务器推送（server push ）

前端性能优化：
http 和 资源级别
1.减少http 请求
2.减少静态资源请求
3.使用缓存
代码级别


DNS解析
TCP连接
发送HTTP请求
服务器处理请求并返回HTTP报文
浏览器解析渲染页面
连接结束
