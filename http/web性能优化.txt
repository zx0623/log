1.影响网络通信的决定性的因素
  延迟：分组从信息源发送到目的地所需要的时间。
  带宽：逻辑或物理通信路径最大的吞吐量
2.延迟
=> 消息（message）或分组（packet）从起点到终点经历的时间。
影响延迟的因素：
1.传播延迟
  消息从发送端到接受端需要的时间，是信号传播距离和速度的函数。
2.传输延迟
  把消息中的所有比特转移到链路中所需要的时间，是消息长度和链路速率的函数。
3.处理延迟
  处理分组首部，检查位错误及确定分组目标所需要的时间
4.排队延迟
  到来的分组排队等待处理的时间
延迟造成的原因：
传播时间取决于距离和信号通过的媒介，另外传播速度通常不超过光速。
传输延迟由传输链路的速率决定，与客户端到服务器的距离无关.
分组到达的速度超过了路由器的处理能力，那么分组就要在入站缓冲区排队。数据在缓冲区排队等待的时间，当然就是排队延迟。

CDN（content Deliverty Network,内容分发网络）：
=> 最主要的就是通过把内容部署到全球各地，让用户从最近的服务器加载内容，大幅度降低传播分组的时间。
=>ISP 
=> traceroute 测量延迟

IP(Internet Protocol )：负责联网主机之间的路由选址和寻址
TCP(Transmission Control Protocol 传输控制协议): 负责在不可靠的通信之上提供可靠的抽象层。 
采用 TCP 数据流可以确保发送的所有字节能够完整地被接收到，而且到达客户端的顺序也一样。  

三次握手
所有的TCP连接都要经历三次握手，
客户端与服务器在交换数据之前，必须就起始分组序号。
SYN 
客户端选择一个伪随机序列号x,并且发送一个SYN分组， SYN x= rand() 
SYN ACK 
并选择自己的一个随机序列号 y，追加自己的标志和选项，然 后返回响应。
ACK 
客户端给 x 和 y 加 1 并发送握手期间的最后一个ACK分组
三次握手完成后，客户端与服务器之间就可以通信了。 
客户端可以在发送 ACK分组之后立即发送数据，而服务器必须等接收到ACK分组之后才能发送数据。

流量控制：是一种预防发送端过多向接收端发送数据的机制。
为了实现流量控制，TCP连接每一方都要通告自己的接收窗口(rwnd)，其中包含能够保存数据的缓冲区空间大小的信息；

第一次建立连接时，二端都会使用自身系统默认设置来发送rwnd。
浏览器页面主要是通过从服务器向客户端下载数据，因此客户端窗口可能成为瓶颈
如果是在上传图片或视频，即客户端向服务器传送大量数据时，服务器的接收窗口又可能成为制约因素。

那它可以向发送端通告一个较小的窗口。 
假如窗口为零，则意味着必须由应用层先清空缓冲区，才能再接收剩余数据。
这个过程贯穿于每个TCP 连接的整个生命周期:每个ACK 分组都会携带相应的最新rwnd 值以便两端动态调整数据流速，使之适应发送端和接收端的容量及处理能力。

慢启动
首先，服务器通过TCP连接初始化一个新的拥塞窗口（cwnd）变量，将其值设置为一个系统设定的保守值。
.拥塞窗口大小
.发送端对从客户端接收确认(ACK)之前可以发送数据量的限制
.即客户端与服务器之 间最大可以传输(未经 ACK 确认的)数据量取 rwnd 和 cwnd 变量中的最小值

拥塞预防算法：把丢包作为网络拥塞的标志，即路径中某个连接或路由器已经拥堵了，以至于必须采取删包措施。
            因此，必须调整窗口大小，以避免造成更多的包丢失， 从而保证网络畅通。

TCP的常用优点：
1.基本的分组错误检测与纠正           
2.按序交付
3.丢包重发
4.以及保证网络最高效率的流量控制
5.拥塞控制和预防机制

队首阻塞：
产生的原因：因为按序交付

UDP:
无需按序交付数据 
处理分组丢失

Tcp 的优化建议：
• TCP 三次握手增加了整整一次往返时间;
• TCP 慢启动将被应用到每个新连接;
• TCP 流量及拥塞控制会影响所有连接的吞吐量;
• TCP 的吞吐量由当前拥塞窗口大小控制。

UDP(User Datagram Protocol,用户数据报协议)
数据报：一个完整、独立的数据实体，携带着从源节点到目的地节点的足够信息，对这些节点间之前的数据交换和传输网络没有任何依赖。
数据报和分组的区别：
数据报：只用来描述那些通过不可靠的服务传输的分组，既不保证送达，也不发送失败通知。
分组：可以用来指代任何格式化的数据块



